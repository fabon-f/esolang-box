#!/bin/sh

outfile="/tmp/$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1).txt"

cat <<EOF > /tmp/main.cpp
#include <fstream>
#include "code.cpp"

constexpr const char* in = "$(cat - | hex)";
constexpr auto out = f(in);

int main(int argc, char const *argv[]) {
	std::ofstream file;
	file.open("$outfile");
	file << out;
	file.close();
	return 0;
}
EOF

infile=$(realpath "$1")
cat "$infile" | tr -d "#" | sed "s/??=/XXX/g" | sed "s/%:/XX/g" > /tmp/code.cpp

/usr/bin/clang-11 -Wall -O2 -std=c++11 /tmp/main.cpp -o /tmp/code -lm -lstdc++
strings /tmp/code > /tmp/code.strings
/tmp/code 0<&- 1>&2

iscracked=0
IFS='\n'
grep -x -F `cat "$outfile"` /tmp/code.strings > /dev/null
iscracked=$((${iscracked} | $?))
#for x in `cat "$outfile"`
#do
#   grep -x -F `echo $x` /tmp/code.strings > /dev/null
#   iscracked=$((${iscracked} | $?))
#done

if [ ${iscracked} -eq 0 ]
then
   cat "$outfile"
else
   echo "Cracked! You must not compute at run-time."
   echo "Strings:"
   cat /tmp/code.strings
fi

rm -f /tmp/main.cpp /tmp/code.cpp /tmp/code /tmp/code.strings "$outfile"
